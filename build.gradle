// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    ext.kotlin_version = '1.0.0'
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0'
        classpath 'com.novoda:bintray-release:0.3.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}
subprojects {
    if (!project.name.contains('sample')) {
        apply plugin: 'jacoco'
        apply plugin: 'com.android.library'

        task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
            group = "Reporting"
            description = "Generate Jacoco coverage reports"

            classDirectories = fileTree(
                    dir: "${project.buildDir}/intermediates/classes",
                    excludes: ['**/R.class',
                               '**/R$*.class',
                               '**/*$ViewInjector*.*',
                               '**/BuildConfig.*',
                               '**/Manifest*.*']
            )

            def coverageSourceDirs = [
                    project.android.sourceSets.main.java.srcDirs
            ]

            additionalSourceDirs = files(coverageSourceDirs)
            sourceDirectories = files(coverageSourceDirs)
            executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")

            reports {
                xml.enabled = true
                html.enabled = true
            }
        }
    }
}
project(':kotlin') {
    apply plugin: 'kotlin-android'
    android {
        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
            test.java.srcDirs += 'src/test/kotlin'
            androidTest.java.srcDirs += 'src/androidTest/kotlin'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports', description: 'Generates an aggregate report from all subprojects') {
    def validSubprojects = subprojects.findAll {
        !it.name.contains('sample')
    }
    dependsOn = validSubprojects.jacocoTestReport

    classDirectories = files(validSubprojects.jacocoTestReport.classDirectories)
    additionalSourceDirs = files(validSubprojects.jacocoTestReport.additionalSourceDirs)
    sourceDirectories = files(validSubprojects.jacocoTestReport.additionalSourceDirs)
    executionData = files(validSubprojects.jacocoTestReport.executionData)

    reports {
        html.enabled = true // human readable
        xml.enabled = true // required by coveralls
    }
}
